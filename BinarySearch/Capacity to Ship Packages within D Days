https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/

class Solution {
    public static int binary(int[] nums, int cap){
        int number = 1;
        int t = 0;
        for(int i=0;i<nums.length;i++){
            if(nums[i]+t <= cap){
                t+= nums[i];
            }else{
                number++;
                t = nums[i];
            }
        }
        return number;
    }
    public int shipWithinDays(int[] weights, int days) {
        int n = weights.length;
        int min = Integer.MIN_VALUE;
        int sum = 0;
        for(int i=0;i<n;i++){
            if(weights[i] > min){
                min = weights[i];
            }
            sum = sum + weights[i];
        }
        int low = min;
        int high = sum;
        while(low<=high){
            int mid = low + (high-low)/2;
            int count = binary(weights, mid);
            if(count <= days){
                high = mid-1;
            }else{
                low = mid+1;
            }
        }
        return low;
    }
}
