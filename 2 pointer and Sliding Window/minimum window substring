Link - https://leetcode.com/problems/minimum-window-substring/description/

import java.util.HashMap;

class Solution {
    public String minWindow(String s, String t) {
        int l = 0, r = 0;
        int n = s.length(), m = t.length();
        int cnt = 0, minLen = Integer.MAX_VALUE;
        int startInd = -1;
        HashMap<Character, Integer> mp = new HashMap<>();

        for (int i = 0; i < m; i++) {
            mp.put(t.charAt(i), mp.getOrDefault(t.charAt(i), 0) + 1);
        }

        while (r < n) {
            if (mp.getOrDefault(s.charAt(r), 0) > 0) {
                cnt++;
            }
            mp.put(s.charAt(r), mp.getOrDefault(s.charAt(r), 0) - 1);

            while (cnt == m) {
                if (r - l + 1 < minLen) {
                    minLen = r - l + 1;
                    startInd = l;
                }

                mp.put(s.charAt(l), mp.getOrDefault(s.charAt(l), 0) + 1);
                if (mp.get(s.charAt(l)) > 0) {
                    cnt--;
                }
                l++;
            }
            r++;
        }
        return startInd == -1 ? "" : s.substring(startInd, startInd + minLen);
    }
}
