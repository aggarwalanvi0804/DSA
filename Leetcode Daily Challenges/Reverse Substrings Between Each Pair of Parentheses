Link : https://leetcode.com/problems/reverse-substrings-between-each-pair-of-parentheses/description/

# Given a string s that consists of lower case English letters and brackets.
# Reverse the strings in each pair of matching parentheses, starting from the innermost one.
# Your result should not contain any brackets.
# We can use a stack here.

class Solution {
    public String reverseParentheses(String s) {
        int n = s.length();
        Stack<Character> st = new Stack<>();
        for(int i=0;i<n;i++){
            char ch = s.charAt(i);
            if(ch == ')'){
                StringBuilder sb = new StringBuilder();
                while(st.peek() != '('){
                    sb.append(st.pop());
                }
                st.pop();
                int ii=0;
                while(ii<sb.length()){
                    st.push(sb.charAt(ii++));
                }
            }else{
                st.push(ch);
            }
        }
        StringBuilder sb1 = new StringBuilder();
        while(!st.isEmpty()){
            sb1.append(st.pop());  
        }
        return sb1.reverse().toString();
    }
}
