Link - https://leetcode.com/problems/maximum-score-from-removing-substrings/?envType=daily-question&envId=2024-07-12

class Solution {
    public int maximumGain(String s, int x, int y) {
        if (x > y) {
            return removePairs(s, 'a', 'b', x, y);
        } else {
            return removePairs(s, 'b', 'a', y, x);
        }
    }

    private int removePairs(String s, char first, char second, int firstScore, int secondScore) {
        Stack<Character> stack = new Stack<>();
        int count = 0;

        // First pass: remove the more valuable pairs
        for (char ch : s.toCharArray()) {
            if (ch == second && !stack.isEmpty() && stack.peek() == first) {
                stack.pop();
                count += firstScore;
            } else {
                stack.push(ch);
            }
        }

        // Create a new string from the remaining characters in the stack
        StringBuilder remaining = new StringBuilder();
        while (!stack.isEmpty()) {
            remaining.insert(0, stack.pop());
        }

        // Second pass: remove the less valuable pairs from the remaining string
        s = remaining.toString();
        for (char ch : s.toCharArray()) {
            if (ch == first && !stack.isEmpty() && stack.peek() == second) {
                stack.pop();
                count += secondScore;
            } else {
                stack.push(ch);
            }
        }

        return count;
    }
}
