https://www.geeksforgeeks.org/problems/the-celebrity-problem/1?page=1&difficulty%255B%255D=1

class Solution
{ 
    //Function to find if there is a celebrity in the party or not.
    int celebrity(int M[][], int n)
    {
    	// code here 

    // 	int[] freq = new int[n];
    // 	for(int i=0;i<n;i++){
    // 	    for(int j=0;j<n;j++){
    // 	        if(i!=j && M[i][j] == 1){
    // 	            freq[j]++;
    // 	        }
    // 	    }
    // 	}
    // 	int row = -1;
    // 	for(int i=0;i<freq.length;i++){
    // 	    if(freq[i] == n-1){
    // 	        row = i;
    // 	        break;
    // 	    }
    // 	}
    // 	if(row == -1) return -1;
    // 	for(int i=0;i<n;i++){
    // 	    if(row != i && M[row][i] == 1){
    // 	        return -1;
    // 	    }
    // 	}
    // 	return row;
    
    //2nd approach
    
    // int i=0;
    // while(i<n){
    //     //for the row
    //     int count = 0;
    //     int j = 0;
    //     while(j<n){
    //         if(M[i][j] == 0) {
    //             count++;
    //         }
    //         j++;
    //     }
        
    //     //for the column
    //     int ct = 0;
    //     j = 0;
    //     while(j<n){
    //         if(j!=i && M[i][j] == 1){
    //             ct++;
    //         }j++;
    //     }
    //     if(count == n && ct == n-1) return i;
    //     else i++;
    // }
    // return -1;
    // int i = 0;
    //     while (i < n) {
    //         // Check the row for candidate i
    //         int rowZeroCount = 0;
    //         for (int j = 0; j < n; j++) {
    //             if (M[i][j] == 0) {
    //                 rowZeroCount++;
    //             }
    //         }

    //         // Check the column for candidate i
    //         int colOneCount = 0;
    //         for (int j = 0; j < n; j++) {
    //             if (j != i && M[j][i] == 1) {
    //                 colOneCount++;
    //             }
    //         }

    //         // If the candidate i satisfies both conditions, return i
    //         if (rowZeroCount == n && colOneCount == n - 1) {
    //             return i;
    //         } else {
    //             i++;
    //         }
    //     }
    //     return -1;
    
    //3rd approach using stack
    
    Stack<Integer> st = new Stack<>();
    for(int i=0;i<n;i++){
        st.push(i);
    }
    while(st.size()!=1){
    int A = st.pop();
    int B = st.pop();
    //who is the celebrity
    if(M[B][A] == 1){
        st.push(A);
    }else{
        st.push(B);
    }
    }
    int a = st.pop();
    int rowCt = 0;
    int colCt = 0;
    for(int j=0;j<n;j++){
        if(M[a][j] == 0){
            rowCt++;
        }
    }
    for(int j = 0;j<n;j++){
        if(M[j][a] == 1) colCt++;
    }
    if(rowCt == n && colCt == n-1) return a;
    else return -1; // 0(N) T.C and 0(1) S.C
}
}
