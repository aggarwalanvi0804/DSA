Link - https://leetcode.com/problems/binary-subarrays-with-sum/description/

class Solution {
    public static int findGoal(int[] nums, int goal){
        //if goal is 0 then 0 - (-1) so we directly say to return 0
        if(goal<0) return 0;
        int l=0,r=0,sum=0,count=0;
        while(r<nums.length){
            sum+=nums[r];
            while(sum>goal){
                sum-=nums[l];
                l=l+1;
            }
            count+=(r-l+1);
            r=r+1;
        }
        return count;
    }
    public int numSubarraysWithSum(int[] nums, int goal) {
        //no of subarrays where sum<=goal - sum<=goal-1
        return findGoal(nums, goal) - findGoal(nums, goal-1);
    }
}
