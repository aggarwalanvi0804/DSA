https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/description/

class Solution {
    public int[] searchRange(int[] nums, int target) {
        int [] arr = new int[2];
        int n = nums.length;
        int low = 0;
        int high = n-1;
        int res = -1;
        while(low<=high){
            int mid = low + (high-low)/2;
            if(nums[mid] == target){
                res = mid;
                high = mid-1;
            }else if(nums[mid] > target){
                high = mid - 1;
            }else{
                low = mid + 1;
            }
        }
        arr[0] = res;

        int low1 = 0;
        int high1 = n-1;
        int res1 = -1;
        while(low1<=high1){
            int mid = low1 + (high1-low1)/2;
            if(nums[mid] == target){
                res1 = mid;
                low1 = mid+1;
            }else if(nums[mid] > target){
                high1 = mid - 1;
            }else{
                low1 = mid + 1;
            }
        }
        arr[1] = res1;
        return arr;
    }
}
