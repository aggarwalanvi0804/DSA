Link - https://leetcode.com/problems/longest-repeating-character-replacement/description/

class Solution {
    public int characterReplacement(String s, int k) {
        int n = s.length();
        int maxLen = 0, maxFreq = 0, r = 0, l = 0;
        int[] hash = new int[26];
        
        while (r < n) {
            char ch = s.charAt(r);
            int a = ch - 'A';
            hash[a]++;
            maxFreq = Math.max(maxFreq, hash[a]);
            
            // Adjust the window if the condition is not met
            if ((r - l + 1) - maxFreq > k) {
                char chLeft = s.charAt(l);
                hash[chLeft - 'A']--;
                l++;
            }
            
            maxLen = Math.max(maxLen, r - l + 1);
            r++;
        }
        
        return maxLen;
    }
}
