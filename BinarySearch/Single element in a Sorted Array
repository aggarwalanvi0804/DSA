https://leetcode.com/problems/single-element-in-a-sorted-array/

class Solution {
    public int singleNonDuplicate(int[] nums) {
        int n = nums.length;
        if(n == 1) return nums[0];
        if(nums[0] != nums[1]) return nums[0];
        if(nums[n-1] != nums[n-2]) return nums[n-1];
        int low = 1;
        int high = n-2;
        int index1 = 0;
        int index2 = 0;
        int res = 0;
        while(low<=high){
            int mid = low + (high-low)/2;
            if(nums[mid] != nums[mid+1] && nums[mid]!= nums[mid-1]){
                res = nums[mid];
                break;
            }else if(nums[mid] == nums[mid-1]){
                index1 = mid;
                if(index1 % 2 ==0){
                    high = mid-1;
                }else{
                    low = mid+1;
                }
            }else{
                index1 = mid;
                if(index1 % 2 !=0){
                    high = mid-1;
                }else{
                    low = mid+1;
                }
            }
        }
        return res;
    }
}
