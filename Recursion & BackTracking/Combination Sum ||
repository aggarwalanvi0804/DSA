https://leetcode.com/problems/combination-sum-ii/description/

class Solution {
    public static void fun(int idx, ArrayList<Integer> list,
    HashSet<ArrayList<Integer>> set, int n,int k, int[] nums){
        if(k == 0){
            set.add(new ArrayList<>(list));
            return;
        }
        if(k < 0 || idx == n) return;
        for(int i =idx;i<n;i++){
            if(idx!=i && nums[i] == nums[i-1]){
                continue;
            }
            // if(k<0) break;
            list.add(nums[i]);
            fun(i+1,list,set,n,k-nums[i],nums);
            list.remove(list.size()-1);

            //backtracking
            // fun(i+1,list,set,n,k,nums);
        }

    }
    public List<List<Integer>> combinationSum2(int[] nums, int k) {
        ArrayList<Integer> list = new ArrayList<>();
        Arrays.sort(nums);
        HashSet<ArrayList<Integer>> set = new HashSet<>();
        int n = nums.length;
        fun(0,list,set,n,k,nums);
        List<List<Integer>> finalList = new ArrayList<>(set);
        return finalList;
    }
}
